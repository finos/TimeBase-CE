/*
 * Copyright 2023 EPAM Systems, Inc
 *
 * See the NOTICE file distributed with this work for additional information
 * regarding copyright ownership. Licensed under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
package ${java.samples.writestream.packageName};

import data.TypeMap;
import com.epam.deltix.qsrv.hf.tickdb.pub.*;
import com.epam.deltix.qsrv.hf.pub.md.*;
import com.epam.deltix.qsrv.hf.pub.*;

// imports

public class ${java.samples.writestream.className} {
    public static void main(String[] args) throws Exception {
        try (DXTickDB db = TickDBFactory.createFromUrl("${timebase.url}")) {
            db.open(false);

            DXTickStream stream = db.getStream("${timebase.stream}");
            LoadingOptions options = new LoadingOptions();

            options.typeLoader = TypeMap.TYPE_LOADER;

            // init messages

            try (TickLoader loader = stream.createLoader(options)) {
                for (int ii = 0; ii < 10; ii++) {
                    // send messages
                    Thread.sleep(100);
                }
            }
        }

        if (args.length == 0 || args[args.length - 1].compareTo("-force") != 0)
            System.in.read();
    }
}