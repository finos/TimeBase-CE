// =============================================================================
// Copyright 2023 EPAM Systems, Inc
//
// See the NOTICE file distributed with this work for additional information
// regarding copyright ownership. Licensed under the Apache License,
// Version 2.0 (the "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
// License for the specific language governing permissions and limitations under
// =============================================================================
using System;
using System.IO;

using EPAM.Deltix.Timebase.Api.Utilities.Time;
using EPAM.Deltix.Timebase.Api.Communication;
using EPAM.Deltix.Timebase.Api;
using EPAM.Deltix.Timebase.Client;

namespace TimebaseSample
{
    /// <summary>
    /// Prints out the first 100 messages from the specified stream.
    /// </summary>
    public class ReadStream
    {
        public static void Run()
        {
            using (ITickDb db = TickDbFactory.CreateFromUrl("${timebase.url}"))
            {
                db.Open(true);

                ITickStream stream = db.GetStream("${timebase.stream}");
                DateTime time = TimeConstants.TimestampUnknown;
                SelectionOptions options = new SelectionOptions();

                //options.Raw = true;
                options.Loader = TypeMap.TYPE_LOADER;

                using (ITickCursor cursor =
                         stream.Select(time, options, null, null))
                {
                    int count = 0;

                    while (cursor.Next() && count++ < 100)
                    {
                        Console.WriteLine(cursor.GetMessage());
                    }
                }
            }
        }
    }
}
